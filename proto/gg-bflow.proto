syntax = "proto3";

import "google/protobuf/empty.proto";

option go_package="app/api/grpc;gg_bflow";

package ggbflow;

service GGBFlow {
  rpc HealthCheck(google.protobuf.Empty) returns (HealthCheckRes);
}

service GGBFlowSender {
    rpc SendOneFlow(SendFlowArg) returns (Ok);
    rpc SendFlow(stream SendFlowArg) returns (Ok);
    rpc SendMeta(SendMetaArg) returns (Ok);
}

service GGBFlowLoader {
    rpc LoadDiscreteFlow(LoadDiscreteFlowArg) returns (DiscreteFlowRes);
    rpc LoadFlow(LoadFlowArg) returns (stream FlowRes);
    rpc LoadMeta(LoadMetaArg) returns (MetaRes);
}

message Ok {
  string Message = 1;
  string Meta = 2;
}

message HealthCheckRes {
    string Uptime = 1;
    string Meta = 2;
}

message LoadDiscreteFlowArg {
    string Key = 1;
}

message LoadFlowArg {
    string Key = 1;
    int64 Rate = 2;
}

message LoadMetaArg {
  string Key = 1;
}

message SendFlowArg {
  string Key = 1;
  bytes Byte = 2;
}

message DiscreteFlowRes {
    bytes Byte = 1;
}

message FlowRes {
  bytes Byte = 1;
  string Info = 2;
}


message SendMetaArg {
  string Key = 1;
  string Meta = 2;
}

message MetaRes {
  string Key = 1;
  string Meta = 2;
  int64 CreatedAt = 3;
  int64 UpdatedAt = 4;
}