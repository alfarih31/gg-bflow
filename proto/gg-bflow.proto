syntax = "proto3";

import "google/protobuf/empty.proto";

option go_package="app/api/grpc;gg_bflow";

package ggbflow;

service GGBFlow {
  rpc HealthCheck(google.protobuf.Empty) returns (HealthCheckRes);
}

service GGBFlowStreamer {
    rpc SendDiscreteFlow(SendFlowArg) returns (Ok);
    rpc SendFlow(stream SendFlowArg) returns (Ok);
    rpc SaveMeta(SaveMetaArg) returns (Ok);
}

service GGBFlowViewer {
    rpc LoadDiscreteFlow(LoadDiscreteFlowArg) returns (DiscreteFlowRes);
    rpc LoadFlow(LoadFlowArg) returns (stream FlowRes);
    rpc LoadMeta(LoadMetaArg) returns (MetaRes);
}

message Ok {
  string Message = 1;
  repeated KeyValue Meta = 2;
}

message HealthCheckRes {
  repeated KeyValue Data = 1;
}

message LoadDiscreteFlowArg {
    string Key = 1;
}

message LoadFlowArg {
    string Key = 1;
    int64 Rate = 2;
}

message LoadMetaArg {
  string Key = 1;
}

message SendFlowArg {
  string Key = 1;
  bytes Byte = 2;
}

message DiscreteFlowRes {
    bytes Byte = 1;
}

message FlowRes {
  bytes Byte = 1;
  string Info = 2;
}

enum ValueType {
  UNKNOWN = 0;
  STR = 1;
  INT = 2;
  FLOAT = 3;
  BOOL = 4;
}

message KeyValue {
  string  Key = 1;
  ValueType Type = 2;
  optional int64 IntValue = 3;
  optional string StrValue = 4;
  optional bool BoolValue = 5;
  optional float FloatValue = 6;
}

message SaveMetaArg {
  string Key = 1;
  repeated KeyValue Meta = 2;
}

message MetaRes {
  string Key = 1;
  repeated KeyValue Meta = 2;
  int64 CreatedAt = 3;
  int64 UpdatedAt = 4;
}